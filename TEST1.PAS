program Test1;

uses Crt, Draw2D, Draw3D, Pismo{, XMS};

{$define hiro1 } { hiro, hiro1 }

const
{$ifdef hiro}
  vpoly=1;
  bodov=44;
  polys=13;
  points:array[1..bodov] of TPoint=(
    (-65,-25,  0),(-55,-25,  0),(-65, 25,  0),(-55, 25,  0), { H }
    (-35,-25,  0),(-25,-25,  0),(-35, 25,  0),(-25, 25,  0), { H }
    (-55, -5,  0),(-35, -5,  0),(-55,  5,  0),(-35,  5,  0), { H }
    (-15,-25,  0),( -5,-25,  0),(-15, 25,  0),( -5, 25,  0), { I }
    (  5,-25,  0),( 15,-25,  0),(  5, 25,  0),( 15, 25,  0), { R }
    ( 15,-15,  0),( 25,-15,  0),( 15, -5,  0),( 25, -5,  0), { R }
    ( 25,-25,  0),( 25,  5,  0),( 35,-15,  0),( 35, -5,  0), { R }
    ( 15,  5,  0),( 15, 15,  0),( 25, 25,  0),( 35, 25,  0), { R }
    ( 55,-25,  0),( 75,-25,  0),( 45,-15,  0),( 85,-15,  0), { O }
    ( 45, 15,  0),( 85, 15,  0),( 55, 25,  0),( 75, 25,  0), { O }
    ( 55,-15,  0),( 75,-15,  0),( 55, 15,  0),( 75, 15,  0));{ O }
  planes:array[1..polys] of TPlane=(
    ( 1, 2, 4, 3),( 5, 6, 8, 7),( 9,10,12,11),(13,14,16,15), { H I }
    (17,18,20,19),(18,25,27,21),(23,28,26,29),(22,27,28,24), { R }
    (26,32,31,29),(33,34,36,35),(37,38,40,39),(35,41,43,37), { R O }
    (42,36,38,44));                                          { O }
{$endif}

{$ifdef hiro1}
  vpoly=1;
  bodov=88;
  polys=69;
  points:array[1..bodov] of TPoint=(
    (-65,-25,  7),(-55,-25,  7),(-65, 25,  7),(-55, 25,  7), { H } { vrch }
    (-35,-25,  7),(-25,-25,  7),(-35, 25,  7),(-25, 25,  7), { H }
    (-55, -5,  7),(-35, -5,  7),(-55,  5,  7),(-35,  5,  7), { H }
    (-15,-25,  7),( -5,-25,  7),(-15, 25,  7),( -5, 25,  7), { I }
    (  5,-25,  7),( 15,-25,  7),(  5, 25,  7),( 15, 25,  7), { R }
    ( 15,-15,  7),( 25,-15,  7),( 15, -5,  7),( 25, -5,  7), { R }
    ( 25,-25,  7),( 25,  5,  7),( 35,-15,  7),( 35, -5,  7), { R }
    ( 15,  5,  7),( 15, 15,  7),( 25, 25,  7),( 35, 25,  7), { R }
    ( 55,-25,  7),( 75,-25,  7),( 45,-15,  7),( 85,-15,  7), { O }
    ( 45, 15,  7),( 85, 15,  7),( 55, 25,  7),( 75, 25,  7), { O }
    ( 55,-15,  7),( 75,-15,  7),( 55, 15,  7),( 75, 15,  7), { O }
    (-65,-25,- 7),(-55,-25,- 7),(-65, 25,- 7),(-55, 25,- 7), { H } { spodok }
    (-35,-25,- 7),(-25,-25,- 7),(-35, 25,- 7),(-25, 25,- 7), { H }
    (-55, -5,- 7),(-35, -5,- 7),(-55,  5,- 7),(-35,  5,- 7), { H }
    (-15,-25,- 7),( -5,-25,- 7),(-15, 25,- 7),( -5, 25,- 7), { I }
    (  5,-25,- 7),( 15,-25,- 7),(  5, 25,- 7),( 15, 25,- 7), { R }
    ( 15,-15,- 7),( 25,-15,- 7),( 15, -5,- 7),( 25, -5,- 7), { R }
    ( 25,-25,- 7),( 25,  5,- 7),( 35,-15,- 7),( 35, -5,- 7), { R }
    ( 15,  5,- 7),( 15, 15,- 7),( 25, 25,- 7),( 35, 25,- 7), { R }
    ( 55,-25,- 7),( 75,-25,- 7),( 45,-15,- 7),( 85,-15,- 7), { O }
    ( 45, 15,- 7),( 85, 15,- 7),( 55, 25,- 7),( 75, 25,- 7), { O }
    ( 55,-15,- 7),( 75,-15,- 7),( 55, 15,- 7),( 75, 15,- 7));{ O }
  planes:array[1..polys] of TPlane=(
    ( 1, 2, 4, 3),( 5, 6, 8, 7),( 9,10,12,11),(13,14,16,15), { H I } { vrch }
    (17,18,20,19),(18,25,27,21),(23,28,26,29),(22,27,28,24), { R }
    (26,32,31,29),(33,34,36,35),(37,38,40,39),(35,41,43,37), { R O }
    (42,36,38,44),                                           { O }
    (45,46,48,47),(49,50,52,51),(53,54,56,55),(57,58,60,59), { H I } { spodok }
    (61,62,64,63),(62,69,71,65),(67,72,70,73),(66,71,72,68), { R }
    (70,76,75,73),(77,78,80,79),(81,82,84,83),(79,85,87,81), { R O }
    (86,80,82,88),                                           { O }
    ( 1, 2,46,45),( 5, 6,50,49),( 9,10,54,53),(11,12,56,55), { H } { boky }
    ( 3, 4,48,47),( 7, 8,52,51),( 1, 3,47,45),( 2, 9,53,46), { H }
    ( 4,11,55,48),( 5,10,54,49),(12, 7,51,56),( 6, 8,52,50), { H }
    (13,14,58,57),(15,16,60,59),(13,15,59,57),(14,16,60,58), { I }
    (17,25,69,61),(21,22,66,65),(23,24,68,67),(29,26,70,73), { R }
    (19,20,64,63),(31,32,76,75),(17,19,63,61),(21,23,67,65), { R }
    (30,20,64,74),(22,24,68,66),(27,28,72,71),(25,27,71,69), { R }
    (26,28,72,70),(29,32,76,73),(30,31,75,74),(33,34,78,77), { R O }
    (41,42,86,85),(43,44,88,87),(39,40,84,83),(35,37,81,79), { O }
    (41,43,87,85),(42,44,88,86),(36,38,82,80),(33,35,79,77), { O }
    (34,36,80,78),(37,39,83,81),(38,40,84,82));              { O }
{$endif}

var
  points2: array[1..bodov] of TPoint;
  point: TPoint;
  i, o: byte;
  rx, ry, rz: integer;
  z: char;
  auto{, vretrace}: boolean;
  p: TPalette;

procedure VypisRychlost;
var s: string;
begin
  Str(refreshrate, s);
  VypisXYF(0, 0, 255, 'Refresh rate: ' + s);
end;

BEGIN
  OpenVGA;
  if not Opened then Halt;
  sx:= MaxX div 2;
  sy:= MaxY div 2;
  svx:= 0;
  svy:= 0;
  svz:= 250;
  vz:= 250;
  rx:= 0;
  ry:= 0;
  rz:= 0;
  auto:= true;
{  vretrace:= true;}
  for i:= 0 to 255 do
  begin
    p. r:= 0;
    p. g:= 15 * i div 255;
    p. b:= 63 * i div 255;
    SetRGB(i, p);
  end;
  InitPismo;
  LoadPismo(2);
  repeat
    z:= #0;
    if KeyPressed then z:= ReadKey;
    if UpCase(z) = 'A' then auto:= not auto;
{    if UpCase(z) = 'V' then vretrace:= not vretrace;}
    if not auto then
    begin
      if z = #72 then Inc(rx, 5);
      if z = #80 then Dec(rx, 5);
      if z = #77 then Inc(ry, 5);
      if z = #75 then Dec(ry, 5);
    end else
    begin
      inc(rx, -2);
      inc(ry,  2);
      inc(rz, -2);
    end;
    if rx >= 360 then rx:= rx - 360;
    if rx < 0 then rx:= rx + 360;
    if ry >= 360 then ry:= ry - 360;
    if ry < 0 then rz:= rz + 360;
    if rz >= 360 then rz:= rz - 360;
    if rz < 0 then ry:= ry + 360;
    for i:= 1 to bodov do
    begin
      rotateX(points[i], points2[i], rx);
      rotateY(points2[i], point, ry);
      rotateZ(point, points2[i], rz);
    end;
    for i:= 1 to polys do begin
      hlbka[i]:= points2[planes[i, 0], 2] + points2[planes[i, 1], 2]
                 + points2[planes[i, 2], 2] + points2[planes[i, 3], 2];
      poradie[i]:= i;
    end;
    usporiadaj(polys);
    setColor(0);
    ClearVirtual;
    for i:= vpoly to polys do
      Polygon4(points2[planes[poradie[i], 0]], points2[planes[poradie[i], 1]],
               points2[planes[poradie[i], 2]], points2[planes[poradie[i], 3]]);
    WaitForRetrace;
    VypisRychlost;
    Refresh;
  until z= #27;
  DonePismo;
  CloseVGA;
END.